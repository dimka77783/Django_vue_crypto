# docker-compose.yml
version: '3.8'

services:
  # === PostgreSQL (теперь в docker-compose) ===
  postgres:
    image: postgres:15-alpine
    container_name: crypto_db
    environment:
      POSTGRES_DB: crypto_db
      POSTGRES_USER: crypto_user
      POSTGRES_PASSWORD: crypto_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db_init:/docker-entrypoint-initdb.d/:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crypto_user -d crypto_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # === Redis ===
  redis:
    image: redis:7-alpine
    container_name: crypto_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  # === Django Backend ===
  backend:
    build: ./backend
    container_name: crypto_backend
    command: >
      sh -c "
      celery -A config worker -l INFO &
      celery -A config beat -l INFO &
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crypto_db
      - DB_USER=crypto_user
      - DB_PASSWORD=crypto_password
      - CELERY_BROKER_URL=redis://redis:6379/0
      - WEBDRIVER_CACHE_DIR=/app/.cache/selenium
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  # === Celery Worker ===
  celery_worker:
    build: ./backend
    command: celery -A config worker -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crypto_db
      - DB_USER=crypto_user
      - DB_PASSWORD=crypto_password
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  # === Celery Beat ===
  celery_beat:
    build: ./backend
    command: celery -A config beat -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=crypto_db
      - DB_USER=crypto_user
      - DB_PASSWORD=crypto_password
      - CELERY_BROKER_URL=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped

  # === Frontend ===
  frontend:
    build: ./frontend
    container_name: crypto_frontend
    ports:
      - "8080:80"
    depends_on:
      - backend
    restart: unless-stopped

# === Volumes ===
volumes:
  postgres_data: